package com.luowei.virusmap.domain;

import java.util.ArrayList;
import java.util.List;

public class VirusdataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public VirusdataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public VirusdataExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public VirusdataExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        VirusdataExample example = new VirusdataExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public VirusdataExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public VirusdataExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("`name` is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("`name` is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("`name` =", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andNameEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("`name` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("`name` <>", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andNameNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("`name` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("`name` >", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("`name` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("`name` >=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andNameGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("`name` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("`name` <", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("`name` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("`name` <=", value, "name");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andNameLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("`name` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("`name` like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("`name` not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("`name` in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("`name` not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("`name` between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("`name` not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNull() {
            addCriterion("province is null");
            return (Criteria) this;
        }

        public Criteria andProvinceIsNotNull() {
            addCriterion("province is not null");
            return (Criteria) this;
        }

        public Criteria andProvinceEqualTo(String value) {
            addCriterion("province =", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andProvinceEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("province = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceNotEqualTo(String value) {
            addCriterion("province <>", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andProvinceNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("province <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThan(String value) {
            addCriterion("province >", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andProvinceGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("province > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceGreaterThanOrEqualTo(String value) {
            addCriterion("province >=", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andProvinceGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("province >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLessThan(String value) {
            addCriterion("province <", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andProvinceLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("province < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLessThanOrEqualTo(String value) {
            addCriterion("province <=", value, "province");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andProvinceLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("province <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProvinceLike(String value) {
            addCriterion("province like", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotLike(String value) {
            addCriterion("province not like", value, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceIn(List<String> values) {
            addCriterion("province in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotIn(List<String> values) {
            addCriterion("province not in", values, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceBetween(String value1, String value2) {
            addCriterion("province between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andProvinceNotBetween(String value1, String value2) {
            addCriterion("province not between", value1, value2, "province");
            return (Criteria) this;
        }

        public Criteria andConfirmIsNull() {
            addCriterion("confirm is null");
            return (Criteria) this;
        }

        public Criteria andConfirmIsNotNull() {
            addCriterion("confirm is not null");
            return (Criteria) this;
        }

        public Criteria andConfirmEqualTo(Integer value) {
            addCriterion("confirm =", value, "confirm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andConfirmEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("confirm = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConfirmNotEqualTo(Integer value) {
            addCriterion("confirm <>", value, "confirm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andConfirmNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("confirm <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConfirmGreaterThan(Integer value) {
            addCriterion("confirm >", value, "confirm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andConfirmGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("confirm > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConfirmGreaterThanOrEqualTo(Integer value) {
            addCriterion("confirm >=", value, "confirm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andConfirmGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("confirm >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConfirmLessThan(Integer value) {
            addCriterion("confirm <", value, "confirm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andConfirmLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("confirm < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConfirmLessThanOrEqualTo(Integer value) {
            addCriterion("confirm <=", value, "confirm");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andConfirmLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("confirm <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andConfirmIn(List<Integer> values) {
            addCriterion("confirm in", values, "confirm");
            return (Criteria) this;
        }

        public Criteria andConfirmNotIn(List<Integer> values) {
            addCriterion("confirm not in", values, "confirm");
            return (Criteria) this;
        }

        public Criteria andConfirmBetween(Integer value1, Integer value2) {
            addCriterion("confirm between", value1, value2, "confirm");
            return (Criteria) this;
        }

        public Criteria andConfirmNotBetween(Integer value1, Integer value2) {
            addCriterion("confirm not between", value1, value2, "confirm");
            return (Criteria) this;
        }

        public Criteria andSuspectIsNull() {
            addCriterion("suspect is null");
            return (Criteria) this;
        }

        public Criteria andSuspectIsNotNull() {
            addCriterion("suspect is not null");
            return (Criteria) this;
        }

        public Criteria andSuspectEqualTo(Integer value) {
            addCriterion("suspect =", value, "suspect");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andSuspectEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("suspect = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuspectNotEqualTo(Integer value) {
            addCriterion("suspect <>", value, "suspect");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andSuspectNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("suspect <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuspectGreaterThan(Integer value) {
            addCriterion("suspect >", value, "suspect");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andSuspectGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("suspect > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuspectGreaterThanOrEqualTo(Integer value) {
            addCriterion("suspect >=", value, "suspect");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andSuspectGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("suspect >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuspectLessThan(Integer value) {
            addCriterion("suspect <", value, "suspect");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andSuspectLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("suspect < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuspectLessThanOrEqualTo(Integer value) {
            addCriterion("suspect <=", value, "suspect");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andSuspectLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("suspect <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSuspectIn(List<Integer> values) {
            addCriterion("suspect in", values, "suspect");
            return (Criteria) this;
        }

        public Criteria andSuspectNotIn(List<Integer> values) {
            addCriterion("suspect not in", values, "suspect");
            return (Criteria) this;
        }

        public Criteria andSuspectBetween(Integer value1, Integer value2) {
            addCriterion("suspect between", value1, value2, "suspect");
            return (Criteria) this;
        }

        public Criteria andSuspectNotBetween(Integer value1, Integer value2) {
            addCriterion("suspect not between", value1, value2, "suspect");
            return (Criteria) this;
        }

        public Criteria andHealIsNull() {
            addCriterion("heal is null");
            return (Criteria) this;
        }

        public Criteria andHealIsNotNull() {
            addCriterion("heal is not null");
            return (Criteria) this;
        }

        public Criteria andHealEqualTo(Integer value) {
            addCriterion("heal =", value, "heal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andHealEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("heal = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealNotEqualTo(Integer value) {
            addCriterion("heal <>", value, "heal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andHealNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("heal <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealGreaterThan(Integer value) {
            addCriterion("heal >", value, "heal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andHealGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("heal > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealGreaterThanOrEqualTo(Integer value) {
            addCriterion("heal >=", value, "heal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andHealGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("heal >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealLessThan(Integer value) {
            addCriterion("heal <", value, "heal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andHealLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("heal < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealLessThanOrEqualTo(Integer value) {
            addCriterion("heal <=", value, "heal");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andHealLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("heal <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andHealIn(List<Integer> values) {
            addCriterion("heal in", values, "heal");
            return (Criteria) this;
        }

        public Criteria andHealNotIn(List<Integer> values) {
            addCriterion("heal not in", values, "heal");
            return (Criteria) this;
        }

        public Criteria andHealBetween(Integer value1, Integer value2) {
            addCriterion("heal between", value1, value2, "heal");
            return (Criteria) this;
        }

        public Criteria andHealNotBetween(Integer value1, Integer value2) {
            addCriterion("heal not between", value1, value2, "heal");
            return (Criteria) this;
        }

        public Criteria andDeadIsNull() {
            addCriterion("dead is null");
            return (Criteria) this;
        }

        public Criteria andDeadIsNotNull() {
            addCriterion("dead is not null");
            return (Criteria) this;
        }

        public Criteria andDeadEqualTo(Integer value) {
            addCriterion("dead =", value, "dead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andDeadEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("dead = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadNotEqualTo(Integer value) {
            addCriterion("dead <>", value, "dead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andDeadNotEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("dead <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadGreaterThan(Integer value) {
            addCriterion("dead >", value, "dead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andDeadGreaterThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("dead > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadGreaterThanOrEqualTo(Integer value) {
            addCriterion("dead >=", value, "dead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andDeadGreaterThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("dead >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadLessThan(Integer value) {
            addCriterion("dead <", value, "dead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andDeadLessThanColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("dead < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadLessThanOrEqualTo(Integer value) {
            addCriterion("dead <=", value, "dead");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria andDeadLessThanOrEqualToColumn(Virusdata.Column column) {
            addCriterion(new StringBuilder("dead <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeadIn(List<Integer> values) {
            addCriterion("dead in", values, "dead");
            return (Criteria) this;
        }

        public Criteria andDeadNotIn(List<Integer> values) {
            addCriterion("dead not in", values, "dead");
            return (Criteria) this;
        }

        public Criteria andDeadBetween(Integer value1, Integer value2) {
            addCriterion("dead between", value1, value2, "dead");
            return (Criteria) this;
        }

        public Criteria andDeadNotBetween(Integer value1, Integer value2) {
            addCriterion("dead not between", value1, value2, "dead");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table virusdata
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        private VirusdataExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        protected Criteria(VirusdataExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public VirusdataExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table virusdata
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table virusdata
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table virusdata
         *
         * @mbg.generated
         */
        void example(com.luowei.virusmap.domain.VirusdataExample example);
    }
}